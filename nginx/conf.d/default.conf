server {
    listen 80;
    server_name localhost;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()";

    # Version skew protection
    # This helps handle RSC version mismatches
    location ~ ^\/_next\/static\/chunks\/.*\.js$ {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Set long cache for static assets
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        
        # Track the deployment ID in the ETag
        add_header ETag "${deployment_id}${etag}";
    }

    # RSC requests - check for version skew
    location ~ ^\/_next\/static\/[^\/]+\/_ssgManifest\.js$ {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Never cache manifest files to prevent version skew
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    # Special handling for React Server Component requests
    location ~ ^/\?__flight_rsc=.*$ {
        # If the accept header contains text/x-component, this is an RSC request
        if ($http_accept ~* text/x-component) {
            # Check if the deployment ID cookie matches current deployment
            if ($cookie_deployment_id != $deployment_id) {
                # Force a full page refresh on version mismatch
                add_header Content-Type text/plain;
                return 200 "Version skew detected";
            }
        }
        
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Frontend proxy
    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Set the deployment ID cookie
        add_header Set-Cookie "deployment_id=${deployment_id}; Path=/; HttpOnly; SameSite=Strict";
    }

    # Backend API proxy
    location /api/ {
        proxy_pass http://backend:3006/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
} 